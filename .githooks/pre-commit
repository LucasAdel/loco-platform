#!/bin/bash
# Pre-commit hook for Rust projects

set -e

echo "🔍 Running pre-commit checks..."

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "❌ Not in a git repository"
    exit 1
fi

# Get the list of staged Rust files
STAGED_RUST_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.rs$' || true)

if [ -z "$STAGED_RUST_FILES" ]; then
    echo "ℹ️  No Rust files staged, skipping Rust checks"
else
    echo "🦀 Running Rust checks..."
    
    # Format check
    echo "  📐 Checking formatting..."
    if ! cargo fmt --all -- --check; then
        echo "❌ Formatting issues found. Run 'cargo fmt --all' to fix."
        exit 1
    fi
    
    # Syntax check
    echo "  ✓ Checking syntax..."
    if ! cargo check --all; then
        echo "❌ Syntax errors found."
        exit 1
    fi
    
    # Clippy lints
    echo "  📎 Running clippy..."
    if ! cargo clippy --all-targets -- -D warnings; then
        echo "❌ Clippy warnings found."
        exit 1
    fi
fi

# Check for large files
echo "📦 Checking file sizes..."
MAX_SIZE=1048576  # 1MB in bytes
for file in $(git diff --cached --name-only); do
    if [ -f "$file" ]; then
        size=$(wc -c < "$file")
        if [ "$size" -gt "$MAX_SIZE" ]; then
            echo "❌ File $file is too large ($(($size / 1024))KB > 1MB)"
            exit 1
        fi
    fi
done

# Check for merge conflicts
echo "🔀 Checking for merge conflicts..."
if git diff --cached --name-only | xargs grep -l '<<<<<<< HEAD' 2>/dev/null; then
    echo "❌ Merge conflict markers found"
    exit 1
fi

# Check TOML files
STAGED_TOML_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.toml$' || true)
if [ -n "$STAGED_TOML_FILES" ]; then
    echo "📋 Validating TOML files..."
    for file in $STAGED_TOML_FILES; do
        if ! python3 -c "import toml; toml.load('$file')" 2>/dev/null; then
            echo "❌ Invalid TOML file: $file"
            exit 1
        fi
    done
fi

echo "✅ All pre-commit checks passed!"