#!/bin/bash

# Development run script for Loco Platform
# Uses cargo-watch for hot reloading without cargo-leptos

set -e

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

echo -e "${BLUE}ðŸš€ Starting Loco Platform Development Environment${NC}"

# Check dependencies
check_deps() {
    local missing=()
    
    if ! command -v cargo &> /dev/null; then
        missing+=("cargo (Rust)")
    fi
    
    if ! command -v python3 &> /dev/null; then
        missing+=("python3")
    fi
    
    if [ ${#missing[@]} -ne 0 ]; then
        echo -e "${RED}Missing dependencies:${NC}"
        printf '%s\n' "${missing[@]}"
        exit 1
    fi
}

# Install cargo-watch if needed
install_cargo_watch() {
    if ! command -v cargo-watch &> /dev/null; then
        echo -e "${YELLOW}Installing cargo-watch for hot reloading...${NC}"
        cargo install cargo-watch
    fi
}

# Cleanup function
cleanup() {
    echo -e "\n${YELLOW}Shutting down...${NC}"
    # Kill all background processes
    jobs -p | xargs -r kill 2>/dev/null || true
    exit 0
}

trap cleanup INT TERM

# Check dependencies
check_deps
install_cargo_watch

# Kill any existing processes on our ports
echo -e "${BLUE}Cleaning up existing processes...${NC}"
lsof -ti:3070 | xargs -r kill -9 2>/dev/null || true
lsof -ti:3080 | xargs -r kill -9 2>/dev/null || true
sleep 2

# Start backend with hot reloading
echo -e "${BLUE}Starting backend server with hot reloading...${NC}"
cd backend
RUST_LOG=debug cargo watch -x run &
cd ..

# Wait for backend to start
echo -e "${YELLOW}Waiting for backend to start...${NC}"
sleep 5

# Setup frontend
echo -e "${BLUE}Setting up frontend...${NC}"
cd app

# Add wasm target if not already added
rustup target add wasm32-unknown-unknown 2>/dev/null || true

# Install wasm-bindgen if needed
if ! command -v wasm-bindgen &> /dev/null; then
    echo -e "${YELLOW}Installing wasm-bindgen-cli...${NC}"
    cargo install wasm-bindgen-cli
fi

# Create build script
cat > build.sh << 'EOF'
#!/bin/bash
cargo build --target wasm32-unknown-unknown
wasm-bindgen --target web --out-dir pkg ../target/wasm32-unknown-unknown/debug/loco_app.wasm
EOF
chmod +x build.sh

# Initial build
echo -e "${YELLOW}Building frontend...${NC}"
./build.sh

# Watch for changes and rebuild
echo -e "${BLUE}Starting frontend watcher...${NC}"
cargo watch -s ./build.sh &

# Start web server
echo -e "${BLUE}Starting web server on http://localhost:3080${NC}"
python3 -m http.server 3080 &

cd ..

echo -e "${GREEN}âœ… Development environment is ready!${NC}"
echo -e "  Backend:  ${BLUE}http://localhost:3070${NC} (with hot reload)"
echo -e "  Frontend: ${BLUE}http://localhost:3080${NC} (with hot reload)"
echo -e "${YELLOW}Press Ctrl+C to stop${NC}"

# Keep script running
wait